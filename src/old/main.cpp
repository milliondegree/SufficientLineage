/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   main.cpp
 * Author: shaobo
 *
 * Created on October 12, 2018, 3:32 AM
 */

#include <cstdlib>
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <sstream>
#include <map>
#include <cctype>
#include "DNF.h"
#include "Suff.h"
#include <time.h>

using namespace std;

/*
 * main method to compute the sufficient lineage given a k-mDNF formula and 
 * an approximation error epsilon greater than 0
 */
int main(int argc, char** argv) {
    // default
    double arr0[] = {0.7, 0.9, 0.8, 0.75, 0.65, 0.85};
    // knows
    double arr1[] = {0.75, 0.25, 0.125, 0.2, 0.6, 0.45, 0.35, 0.15, 0.27, 0.3, 0.4, 0.5}; //array storing probabilities
    // vqa
    double arr2[] = {1.0, 0.88, 0.324991, 0.163589, 1.0, 0.27, 0.878331, 1.0, 0.151069,
    0.00216412, 0.0360805, 0.0772585, 0.192079, 1.0, 0.25765, 0.170949, 0.314978, 0.176289, 
    0.81, 0.388676, 0.576895, 0.163742, 0.232082, 1.0, 7.71032e-05, 0.103899, 0.102172, 
    0.00314313, 0.155558};
    // trust
    double arr3[] = {0.9, 0.6, 0.75, 0.55, 0.9, 0.75, 0.7, 0.65, 0.9, 0.6, 0.7, 0.8, 0.41, 0.63, 0.27};
    // trust acyclic
    double arr4[] = {0.7, 0.9, 0.65, 0.6, 0.75, 0.9};
    // k-mDNF
    string a = "(x1*x2)+(x1*x3)";
    // vqa
    string b = "((r6*(x1*x2*x3*(ra*(x4))*(rb*(x5))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21)))))))))+(r6*(x1*x14*x3*(ra*(x22))*(rb*(x23))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21)))))))))+(r6*(x24*x14*x3*(ra*(x25))*(rb*(x13))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21)))))))))+(r6*(x24*x2*x3*(ra*(x26))*(rb*(x9))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21)))))))))+(r6*(x1*x19*x20*(ra*(x27))*(rb*(x28))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21)))))))))+(r6*(x24*x19*x20*(ra*(x29))*(rb*(x17))*((r2*(x6))+(r3*(x6*x7*x8*(ra*(x9))*(rb*(x10))*(r1*(x6*x2*x3*(ra*(x11))))))+(r3*(x6*x7*x12*(ra*(x13))*(rb*(x10))*(r1*(x6*x14*x3*(ra*(x15))))))+(r3*(x6*x7*x16*(ra*(x17))*(rb*(x18))*(r1*(x6*x19*x20*(ra*(x21))))))))))";
    // trust
    string c = "((r2*(x12*((r2*(x5*x13))+(r2*(x6*(r2*(x2*x14))))+(r2*(x3*((r1*(x10))+(r2*(x7*x14)))))+(r2*(x4*((r2*(x9*x14))+(r1*(x11))+(r2*(x8*(r2*(x2*x14))))))))))+(r2*(x1*(r2*(x2*((r2*(x6*x15))+(r2*(x5*x13))+(r2*(x4*((r2*(x9*x14))+(r1*(x11))+(r2*(x8*x15)))))+(r2*(x3*((r1*(x10))+(r2*(x7*x14)))))))))))";
    // knows modified
    string d = "(r2*x1*x2)+(((r2*r13*x3*x4*x5)+(r2*r13*x1*x2*x3*x6)+(r13*x3*x6*x7*x8*x10)+(r13*x3*x6*x7*x8*x9*x11)+(r2*r13*x3*x4*x5*x6*x7*x8))*((x10)+(r2*x4*x5)+(r2*r13*x1*x2*x11*x12)+(r2*r13*x4*x5*x9*x11*x12)+(r13*x3*x7*x8*x9*x11*x12)))";
    // knows raw
    string e = "(rc*(((r2*(x1*(rb*(x2))))+(r13*((r13*(x3*(rc*(((r2*(x4*(rb*(x5))))+(r13*((rc*(x6))*((r2*(x2*(rb*(x1))))+(r13*(x7*(rc*((r13*((rc*(x8))*((rd*(x9))+(r13*(x10*x11))+(r2*(x5*(rb*(x4)))))))))))))))))))*(rc*(((rd*(x9))+(r2*(x5*(rb*(x4))))+(r13*(x11*(r13*(x12*(rc*(((r2*(x2*(rb*(x1))))+(r13*((rc*(x10))*((r2*(x4*(rb*(x5))))+(r13*(x8*(rc*((r13*(x3*(rc*(x7))))))))))))))))))))))))))";
    // trust acyclic
    string f = "(r3*((r2*((x1)*(r1*(r0*(x2)))))*((r2*((x3)*(r2*((x4)*(r1*(r0*(x5)))))))+(r2*((x6)*(r1*(r0*(x5))))))))";

    //sample 5
    string s5 = "(r3*((r1*(x5))*(ra*((r1*(x2))))))";
    double arr_s5[] = {0.8,1,0.9,0.75,1};

    //sample 10
    string s10 = "(r3*((r1*(x7))*(ra*((r1*(x1))))))";
    double arr_s10[] = {0.7,0.9,0.9,0.75,1,0.75,0.65,0.6,0.85,0.55,0.65,1};

    //sampel 15
    string s15 = "(r3*((r1*(x16))*(ra*((r2*(x8*((r2*(x9*((r1*(x6))))))))))))";
    double arr_s15[] = {0.9,1,0.7,0.9,0.85,0.85,0.65,0.75,1,0.8,0.85,0.85,0.9,0.6,0.7,0.85,0.6,0.9};

    //sample 20
    string s20 = "(r3*(((r1*(x22))+(r2*(x21*(r1*(x1)))))*(ra*(((r1*(x9)))))))";
    double arr_s20[] = {1,0.75,0.75,1,0.85,0.85,0.9,0.65,0.8,0.6,0.9,0.9,0.55,0.9,0.9,0.95,0.75,0.55,0.7,0.6,0.95,0.65,0.95};

    //sample 25
    string s25 = "(r3*((r2*(x26*((r1*(x12)))))*(ra*(((r2*(x3*((r1*(x17)))))+(r2*(x2*(r2*(x9*((r1*(x17)))))))+(r2*(x4*(r2*(x25*((r1*(x17))))))))))))";
    double arr_s25[] = {1,0.75,0.85,0.65,0.8,0.65,0.65,0.55,0.75,0.75,0.8,0.7,0.55,0.55,0.8,0.7,0.75,0.9,0.6,0.45,0.55,0.9,0.9,0.6,0.7,0.75,0.75,0.55};

    //sample 30
    string s30 = "(r3*((ra*(((r1*(x5))+(r2*(x3*((r1*(x14)))))+(r2*(x4*(r2*(x15*((r1*(x14)))))))+(r2*(x2*(r2*(x10*((r1*(x14))))))))))*((r1*(x23))+(r2*(x26*((r1*(x18))))))))";
    double arr_s30[] = {0.8,0.7,0.95,0.65,0.8,0.75,0.75,0.75,0.85,0.55,0.6,0.55,0.55,0.7,0.55,0.6,0.55,0.95,0.65,0.95,0.75,0.75,0.85,0.75,0.55,0.55,0.55,0.7,0.6,0.6};

    //sample 35
    string s35 = "(r3*((r2*(x35*((r1*(x18))+(r2*(x15*((r1*(x5)))))+(r2*(x14*((r2*(x1*((r1*(x5))))))))+(r2*(x16*((r2*(x9*((r1*(x5)))))))))))*(ra*(((r2*(x13*((r1*(x21)))))+(r2*(x12*(r2*(x11*((r1*(x21))))))))))))";
    double arr_s35[] = {0.9,0.95,0.8,0.9,0.75,0.75,0.75,0.75,0.8,0.85,0.55,0.6,0.75,0.85,0.75,0.7,0.55,0.65,0.8,0.7,0.6,1,0.85,0.6,0.55,0.55,0.7,0.55,0.95,0.75,0.75,0.75,0.6,0.55,0.6,0.55};

    //sample 40
    string s40 = "(r3*((r2*(x4*((r1*(x5))+(r2*(x9*((r2*(x14*((r1*(x31))+(r2*(x33*((r1*(x18)))))))))))+(r2*(x12*((r2*(x27*((r2*(x14*((r1*(x31))+(r2*(x33*((r1*(x18)))))))))))))))))*(ra*(((r2*(x3*x16))+(r2*(x1*((r1*(x7))))))))))";
    double arr_s40[] = {0.9,0.95,0.65,0.75,0.9,0.7,0.6,0.6,0.75,0.65,0.55,0.7,0.65,0.65,0.85,0.45,0.55,0.9,0.85,0.75,0.95,0.9,0.6,0.6,0.55,0.6,0.6,0.65,0.55,0.55,0.7,0.7,0.6,0.6,0.55,0.55,0.9,0.65};

    //sample 45
    string s45 = "(r3*((ra*(((r2*(x2*((r2*(x40*((r2*(x9*x41))+(r1*(x7))))))))+(r2*(x4*(r2*(x44*((r2*(x40*((r2*(x9*x41))+(r1*(x7))))))))))+(r2*(x1*((r2*(x9*x41))+(r1*(x7))))))))*((r2*(x23*((r2*(x9*x41))+(r1*(x5)))))+(r2*(x24*((r2*(x27*((r2*(x40*((r2*(x9*x41))+(r1*(x5))))))))+(r2*(x25*((r2*(x9*x41))+(r1*(x5)))))+(r2*(x28*(r2*(x44*((r2*(x40*((r2*(x9*x41))+(r1*(x5))))))))))))))))";
    double arr_s45[] = {0.9,0.8,0.55,0.65,0.9,0.9,0.75,0.75,0.55,0.75,0.75,0.9,0.6,1,0.8,0.85,0.9,0.65,0.8,0.55,0.55,0.55,0.7,0.75,0.75,0.8,0.75,0.65,0.9,0.85,0.85,0.85,0.55,0.9,1,0.9,0.6,0.55,0.75,0.75,0.85,0.6,0.55,0.6,0.55,0.9,0.6,0.6};

    //sample 50c
    string s50c = "(r3*(((r2*((x10)*((r2*((x39)*((r2*((x35)*(r2*((x19)*(r1*(x44))))))+(r1*(x33)))))+(r2*((x38)*(r2*((x19)*(r1*(x44)))))))))+(r2*((x8)*((r2*((x19)*((r2*((x46)*(r2*((x26)*(r2*((x32)*(r2*((x39)*(r1*(x33))))))))))+(r1*(x44)))))+(r2*((x18)*(r2*((x39)*(r1*(x33)))))))))+(r2*((x12)*((r2*((x49)*((r2*((x23)*((r2*((x18)*(r2*((x39)*(r1*(x33))))))+(r2*((x19)*(r1*(x44)))))))+(r2*((x26)*((r2*((x32)*((r2*((x39)*((r2*((x35)*(r2*((x19)*(r1*(x44))))))+(r1*(x33)))))+(r2*((x38)*(r2*((x19)*(r1*(x44)))))))))+(r2*((x31)*((r2*((x18)*(r2*((x39)*(r1*(x33))))))+(r2*((x19)*(r1*(x44))))))))))+(r2*((x29)*((r2*((x45)*(r2*((x18)*(r2*((x39)*(r1*(x33))))))))+(r1*(x44))))))))+(r2*((x48)*((r2*((x19)*((r2*((x46)*(r2*((x26)*(r2*((x32)*(r2*((x39)*(r1*(x33))))))))))+(r1*(x44)))))+(r2*((x18)*(r2*((x39)*(r1*(x33)))))))))))))*((r2*((x5)*((r2*((x39)*(r2*((x35)*((r2*((x19)*(r2*((x46)*(r1*(x21))))))+(r1*(x16)))))))+(r2*((x38)*((r2*((x19)*(r2*((x46)*(r1*(x21))))))+(r1*(x16))))))))+(r2*((x4)*((r2*((x29)*(r2*((x45)*(r1*(x16))))))+(r2*((x30)*(r2*((x48)*(r1*(x16))))))+(r2*((x23)*(r1*(x16))))+(r1*(x21))+(r2*((x26)*((r2*((x32)*((r2*((x39)*(r2*((x35)*(r1*(x16))))))+(r2*((x38)*(r1*(x16)))))))+(r2*((x31)*(r1*(x16))))))))))+(r1*(x1))+(r2*((x6)*(x22)))+(r2*((x2)*(r2*((x13)*((r2*((x19)*(r2*((x46)*(r1*(x21))))))+(r1*(x16))))))))))";
    double arr_s50c[] = {0.9,0.7,0.6,0.65,0.8,0.55,0.75,0.75,0.75,0.75,0.9,0.6,0.55,0.6,0.75,0.75,0.55,0.7,0.55,1,0.6,0.9,0.55,0.9,0.9,0.6,1,0.6,0.55,0.7,0.7,0.55,0.95,0.65,0.95,0.75,0.75,0.75,0.55,0.55,0.6,0.55,0.6,0.55,0.55,0.55,0.9,0.95,0.65};

    //sample 50
    string s50 = "(r3*(((r2*(x12*((r1*(x43))+(r2*(x47*((r1*(x28))+(r2*(x30*((r2*(x14*((r2*(x25*(r1*(x54)))))))))))))+(r2*(x45*((r2*(x14*((r2*(x25*(r1*(x54))))+(r2*(x20*((r1*(x28)))))+(r2*(x19*(r2*(x27*((r1*(x28)))))))+(r2*(x22*(r2*(x37*((r1*(x28)))))))))))))+(r2*(x46*((r2*(x25*(r1*(x54))))+(r2*(x20*((r1*(x28)))))+(r2*(x22*(r2*(x37*((r1*(x28)))))))+(r2*(x19*(r2*(x27*((r1*(x28)))))))))))))+(r2*(x11*((r2*(x25*(r1*(x54))))+(r2*(x24*((r1*(x43))+(r2*(x47*((r1*(x28))))))))+(r2*(x20*((r1*(x28))+(r2*(x34*((r1*(x43)))))+(r2*(x30*((r2*(x16*((r1*(x43)))))+(r2*(x17*(r2*(x53*((r1*(x43)))))))))))))+(r2*(x22*(r2*(x37*((r1*(x28))+(r2*(x34*((r1*(x43)))))+(r2*(x30*((r2*(x16*((r1*(x43)))))+(r2*(x17*(r2*(x53*((r1*(x43)))))))))))))))+(r2*(x19*(r2*(x27*((r1*(x28))+(r2*(x34*((r1*(x43)))))+(r2*(x30*((r2*(x16*((r1*(x43)))))+(r2*(x17*(r2*(x53*((r1*(x43)))))))))))))))))))*(ra*(((r1*(x1))+(r2*(x5*((r2*(x34*((r1*(x44)))))+(r2*(x30*((r2*(x16*((r1*(x44)))))+(r2*(x17*(r2*(x53*((r1*(x44)))))))+(r2*(x14*((r2*(x24*((r1*(x44))))))))))))))+(r2*(x9*((r1*(x44)))))+(r2*(x4*(r2*(x27*((r2*(x34*((r1*(x44)))))+(r2*(x30*((r2*(x16*((r1*(x44)))))+(r2*(x17*(r2*(x53*((r1*(x44)))))))+(r2*(x14*((r2*(x24*((r1*(x44))))))))))))))))+(r2*(x3*((r2*(x24*((r1*(x44)))))+(r2*(x20*((r2*(x34*((r1*(x44)))))+(r2*(x30*((r2*(x16*((r1*(x44)))))+(r2*(x17*(r2*(x53*((r1*(x44)))))))))))))+(r2*(x22*(r2*(x37*((r2*(x34*((r1*(x44)))))+(r2*(x30*((r2*(x16*((r1*(x44)))))+(r2*(x17*(r2*(x53*((r1*(x44)))))))))))))))+(r2*(x19*(r2*(x27*((r2*(x34*((r1*(x44)))))+(r2*(x30*((r2*(x16*((r1*(x44)))))+(r2*(x17*(r2*(x53*((r1*(x44)))))))))))))))))))))))";
    double arr_s50[] = {0.9,0.8,0.95,0.65,0.95,0.8,0.85,0.55,0.9,0.9,0.75,0.9,0.85,0.85,0.8,0.55,0.8,0.65,0.55,0.8,0.75,0.7,0.65,0.75,0.55,0.85,0.6,0.95,0.75,0.55,0.6,0.55,0.55,0.55,0.85,0.6,0.55,0.55,0.6,0.6,0.55,0.55,0.9,0.9,0.55,0.65,0.65,0.6,0.55,0.55,0.55,0.55,0.6,0.6};

    //paper use case
    //string st = "(r3*((r2*((x1)*(r1*(x2))))*((r2*((x3)*(r2*((x4)*(r1*(x5))))))+(r2*((x6)*(r1*(x5)))))))";
    //double arr[] = {0.7,0.9,0.65,0.6,0.75,0.9};

    //test
    //string test = "(r3*((r2*(trust4-41*((r1*(trust41-1))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-1))))+(r2*(trust41-13*((r1*(trust1-31))+(r2*(trust13-41*trustPath41-1))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-31*trustPath13-1))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-31*trustPath13-1))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-31*trustPath13-1))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-31*trustPath13-1)))))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-31))))+(r2*(trust41-13*(r2*(trust13-41*trustPath41-31)))))))+(r2*(trust1-4*(r2*(trust4-41*((r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-31))))+(r2*(trust41-13*(r2*(trust13-41*trustPath41-31)))))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-31))+(r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-13*(r2*(trust13-41*trustPath41-31)))))))))+(r2*(trust1-13*(r2*(trust13-41*((r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-13*trustPath13-31))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-31)))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-31*trustPath13-1))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-31))+(r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-13*(r2*(trust13-41*trustPath41-31))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-31))))+(r2*(trust41-13*(r2*(trust13-41*trustPath41-31)))))))+(r2*(trust2-13*(r2*(trust13-41*((r2*(trust41-1*trustPath1-31*trustPath13-1))+(r2*(trust41-13*trustPath13-31))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-31))))))))))))))))))*(ra*(((r1*(trust1-4))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-4))))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-4))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-4)))))))+(r2*(trust1-13*((r1*(trust1-34))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust13-41*((r2*(trust41-13*trustPath1-34*trustPath13-4))+(r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-4)))))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))))))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-4))))+(r2*(trust41-13*((r1*(trust1-34))+(r2*(trust13-41*trustPath41-4))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))))))))))))))+(r2*(trust1-2*((r2*(trust2-13*((r1*(trust1-34))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust13-41*((r2*(trust41-13*trustPath1-34*trustPath13-4))+(r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-4)))))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))))))))+(r2*(trust2-41*((r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-4))))+(r2*(trust41-13*((r1*(trust1-34))+(r2*(trust13-41*trustPath41-4))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))))))))))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*trustPath10-4))+(r2*(trust41-13*((r1*(trust1-34))+(r2*(trust13-41*trustPath41-4))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))))))))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-1*trustPath1-4))+(r2*(trust41-10*trustPath10-4))+(r2*(trust41-13*((r1*(trust1-34))+(r2*(trust13-41*trustPath41-4))+(r2*(trust1-6*(r2*(trust6-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-31*(r2*(trust31-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-7*(r1*(trust7-34))))+(r2*(trust1-8*(r2*(trust8-1*trustPath1-34*trustPath13-4))))+(r2*(trust1-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust1-32*((r2*(trust32-1*trustPath1-34*trustPath13-4))+(r2*(trust32-6*(r2*(trust6-1*trustPath1-34*trustPath13-4)))))))+(r2*(trust1-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34)))))))))+(r2*(trust1-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-4*((r2*(trust4-7*(r1*(trust7-34))))+(r2*(trust4-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34))))))))))+(r2*(trust1-21*((r2*(trust21-1*trustPath1-34*trustPath13-4))+(r2*(trust21-10*(r2*(trust10-41*((r2*(trust41-10*trustPath10-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))))))))))+(r2*(trust1-2*((r2*(trust2-41*((r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-13*((r1*(trust13-34))+(r2*(trust13-41*trustPath41-34)))))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))+(r2*(trust2-13*((r1*(trust13-34))+(r2*(trust13-41*((r2*(trust41-13*trustPath13-34))+(r2*(trust41-1*trustPath1-34*trustPath13-4))+(r2*(trust41-7*(r1*(trust7-34))))+(r2*(trust41-10*(r2*(trust10-41*trustPath41-34)))))))))))))))))))))))))))))";
    //string test="(r3*(((r1*(trust2-1))+(r2*(trust2-39*((r1*(trust39-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-1))+(r2*(trust17-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1)))))))+(r2*(trust39-7*((r1*(trust7-1))+(r2*(trust7-39*trustPath39-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))))))))+(r2*(trust2-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1)))))))+(r2*(trust39-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-39*trustPath39-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1)))))))))))))+(r2*(trust2-7*((r1*(trust7-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))+(r2*(trust7-39*((r1*(trust39-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-1))+(r2*(trust17-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))+(r2*(trust7-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))))))))+(r2*(trust2-13*((r2*(trust13-2*trustPath2-1))+(r2*(trust13-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1)))))))+(r2*(trust39-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-39*trustPath39-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))))))))))))))+(r2*(trust2-6*((r2*(trust6-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1)))))))+(r2*(trust39-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-39*trustPath39-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1)))))))))))))+(r2*(trust6-7*((r1*(trust7-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))+(r2*(trust7-39*((r1*(trust39-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-1))+(r2*(trust17-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))+(r2*(trust7-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1)))))))))))))))))))+(r2*(trust2-23*(r2*(trust23-7*((r1*(trust7-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))+(r2*(trust7-39*((r1*(trust39-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-1))+(r2*(trust17-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))+(r2*(trust7-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))))))))))+(r2*(trust2-21*((r2*(trust21-2*trustPath2-1))+(r2*(trust21-7*((r1*(trust7-1))+(r2*(trust7-2*trustPath2-1))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-1))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-1))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-1))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-1))))+(r2*(trust7-39*((r1*(trust39-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1)))))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-1))+(r2*(trust17-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*trustPath39-1))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))+(r2*(trust7-4*((r2*(trust4-2*trustPath2-1))+(r2*(trust4-39*((r1*(trust39-1))+(r2*(trust39-4*trustPath4-1))+(r2*(trust39-2*trustPath2-1))+(r2*(trust39-7*trustPath7-1))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-1))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-1))+(r2*(trust17-39*trustPath39-1)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-1))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-1))))))))))))))))))))*(ra*(((r2*(trust1-39*((r2*(trust39-1*trustPath1-2))+(r1*(trust39-2))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-2))))+(r2*(trust39-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2)))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-2))+(r2*(trust17-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-2))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-2)))))))+(r2*(trust39-7*((r1*(trust7-2))+(r2*(trust7-39*trustPath39-2))+(r2*(trust7-1*trustPath1-2))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-2))))+(r2*(trust7-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2)))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-2))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-2))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-2))))))))))+(r2*(trust1-7*((r1*(trust7-2))+(r2*(trust7-1*trustPath1-2))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-2))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-2))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-2))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-2))))+(r2*(trust7-39*((r2*(trust39-7*trustPath7-2))+(r2*(trust39-1*trustPath1-2))+(r1*(trust39-2))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-2))))+(r2*(trust39-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2)))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-2))+(r2*(trust17-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-2))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-2))))))))))+(r2*(trust7-4*((r1*(trust4-2))+(r2*(trust4-39*((r2*(trust39-4*trustPath4-2))+(r2*(trust39-7*trustPath7-2))+(r2*(trust39-1*trustPath1-2))+(r1*(trust39-2))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-2))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-2))+(r2*(trust17-39*trustPath39-2)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-2))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-2))))))))))))))))+(r2*(trust1-21*((r1*(trust21-2))+(r2*(trust21-7*((r1*(trust7-2))+(r2*(trust7-1*trustPath1-2))+(r2*(trust7-34*(r2*(trust34-7*trustPath7-2))))+(r2*(trust7-19*(r2*(trust19-7*trustPath7-2))))+(r2*(trust7-35*(r2*(trust35-7*trustPath7-2))))+(r2*(trust7-29*(r2*(trust29-7*trustPath7-2))))+(r2*(trust7-39*((r2*(trust39-7*trustPath7-2))+(r2*(trust39-1*trustPath1-2))+(r1*(trust39-2))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-2))))+(r2*(trust39-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2)))))+(r2*(trust39-17*((r2*(trust17-39*trustPath39-2))+(r2*(trust17-4*((r1*(trust4-2))+(r2*(trust4-39*trustPath39-2))))))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-2))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-2))))))))))+(r2*(trust7-4*((r1*(trust4-2))+(r2*(trust4-39*((r2*(trust39-4*trustPath4-2))+(r2*(trust39-7*trustPath7-2))+(r2*(trust39-1*trustPath1-2))+(r1*(trust39-2))+(r2*(trust39-45*(r2*(trust45-39*trustPath39-2))))+(r2*(trust39-17*((r2*(trust17-4*trustPath4-2))+(r2*(trust17-39*trustPath39-2)))))+(r2*(trust39-44*((r2*(trust44-39*trustPath39-2))+(r2*(trust44-37*(r2*(trust37-44*trustPath44-2))))))))))))))))))))))))";
    //string test = "(r3*((r2*(trust4-17*((r1*(trust17-1))+(r2*(trust17-7*((r1*(trust7-1)))))+(r2*(trust17-13*((r1*(trust13-1))+(r2*(trust13-7*((r1*(trust7-1)))))+(r2*(trust13-6*((r1*(trust6-1))+(r2*(trust6-7*((r1*(trust7-1)))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-1))))))))))))))))*(ra*(((r2*(trust1-17*((r2*(trust17-7*((r1*(trust7-4)))))+(r2*(trust17-13*((r2*(trust13-7*((r1*(trust7-4)))))+(r2*(trust13-6*((r2*(trust6-7*((r1*(trust7-4)))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-4))))))))))+(r2*(trust1-17*((r2*(trust17-7*((r1*(trust7-34)))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*((r1*(trust7-34)))))+(r2*(trust13-6*((r2*(trust6-7*((r1*(trust7-34)))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-34))))))))))))))))+(r2*(trust1-7*((r1*(trust7-34))+(r2*(trust7-17*((r2*(trust17-13*((r1*(trust13-34))))))))+(r2*(trust7-4*(r2*(trust4-17*((r2*(trust17-13*((r1*(trust13-34)))))))))))))))))))+(r2*(trust1-7*((r1*(trust7-4))+(r2*(trust7-17*((r2*(trust17-13*((r2*(trust1-17*((r2*(trust17-7*((r1*(trust7-34)))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*((r1*(trust7-34)))))+(r2*(trust13-6*((r2*(trust6-7*((r1*(trust7-34)))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-34))))))))))))))))+(r2*(trust1-7*((r1*(trust7-34))+(r2*(trust7-17*((r2*(trust17-13*((r1*(trust13-34))))))))+(r2*(trust7-4*(r2*(trust4-17*((r2*(trust17-13*((r1*(trust13-34)))))))))))))))))))))))))))";
    //string test = "(r3*((r2*(trust4-17*((r1*(trust17-1))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-1))))+(r2*(trust17-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-17*trustPath17-1))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-1)))))))+(r2*(trust17-13*((r1*(trust13-1))+(r2*(trust13-17*trustPath17-1))+(r2*(trust13-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-17*trustPath17-1))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-1)))))))+(r2*(trust13-6*((r1*(trust6-1))+(r2*(trust6-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-17*trustPath17-1))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-1)))))))+(r2*(trust6-5*(r2*(trust5-7*((r2*(trust7-4*trustPath4-1))+(r1*(trust7-1))+(r2*(trust7-17*trustPath17-1))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-1))))))))))))))))))*(ra*(((r2*(trust1-17*((r2*(trust17-1*trustPath1-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-4))))+(r2*(trust17-7*((r1*(trust7-4))+(r2*(trust7-1*trustPath1-4))+(r2*(trust7-17*trustPath17-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-4)))))))+(r2*(trust17-13*((r2*(trust13-1*trustPath1-4))+(r2*(trust13-17*trustPath17-4))+(r2*(trust13-7*((r1*(trust7-4))+(r2*(trust7-1*trustPath1-4))+(r2*(trust7-17*trustPath17-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-4)))))))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-4))+(r2*(trust6-7*((r1*(trust7-4))+(r2*(trust7-1*trustPath1-4))+(r2*(trust7-17*trustPath17-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-4)))))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-4))+(r2*(trust7-1*trustPath1-4))+(r2*(trust7-17*trustPath17-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-4))))))))))))+(r2*(trust1-17*((r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34))))))))))))))))))+(r2*(trust1-7*((r1*(trust7-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-17*((r2*(trust17-7*trustPath7-34))+(r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*trustPath7-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*trustPath7-34))+(r2*(trust6-5*(r2*(trust5-7*trustPath7-34)))))))))))))+(r2*(trust7-4*(r2*(trust4-17*((r2*(trust17-7*trustPath7-34))+(r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*trustPath7-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*trustPath7-34))+(r2*(trust6-5*(r2*(trust5-7*trustPath7-34))))))))))))))))))))))))+(r2*(trust1-7*((r1*(trust7-4))+(r2*(trust7-1*trustPath1-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-4))))+(r2*(trust7-17*((r2*(trust17-1*trustPath1-4))+(r2*(trust17-7*trustPath7-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-4))))+(r2*(trust17-13*((r2*(trust13-1*trustPath1-4))+(r2*(trust13-17*trustPath17-4))+(r2*(trust13-7*trustPath7-4))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-4))+(r2*(trust6-7*trustPath7-4))+(r2*(trust6-5*(r2*(trust5-7*trustPath7-4)))))))+(r2*(trust1-17*((r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34)))))))+(r2*(trust6-5*(r2*(trust5-7*((r1*(trust7-34))+(r2*(trust7-17*trustPath17-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-4*(r2*(trust4-17*trustPath17-34))))))))))))))))))+(r2*(trust1-7*((r1*(trust7-34))+(r2*(trust7-1*trustPath1-34*trustPath13-4))+(r2*(trust7-33*(r2*(trust33-7*trustPath7-34))))+(r2*(trust7-17*((r2*(trust17-7*trustPath7-34))+(r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*trustPath7-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*trustPath7-34))+(r2*(trust6-5*(r2*(trust5-7*trustPath7-34)))))))))))))+(r2*(trust7-4*(r2*(trust4-17*((r2*(trust17-7*trustPath7-34))+(r2*(trust17-1*trustPath1-34*trustPath13-4))+(r2*(trust17-39*(r2*(trust39-17*trustPath17-34))))+(r2*(trust17-13*((r1*(trust13-34))+(r2*(trust13-7*trustPath7-34))+(r2*(trust13-17*trustPath17-34))+(r2*(trust13-1*trustPath1-34*trustPath13-4))+(r2*(trust13-6*((r2*(trust6-1*trustPath1-34*trustPath13-4))+(r2*(trust6-7*trustPath7-34))+(r2*(trust6-5*(r2*(trust5-7*trustPath7-34))))))))))))))))))))))))))))))))";
    //string test35 = "(r3*((ra*(((r2*(trust1-17*(r2*(trust17-13*trust17-13*trustPath13-2))))+(r2*(trust1-29*((r2*(trust29-7*trust29-7*trustPath7-2))+(r2*(trust29-13*trust29-13*trustPath13-2)))))+(r2*(trust1-13*((r2*(trust13-4*trust13-4*trustPath4-2))+(r1*(trust13-2*trust13-2))+(r2*(trust13-7*trust13-7*trustPath7-2))+(r2*(trust13-29*trust13-29*trustPath29-2))+(r2*(trust13-17*trust13-17*trustPath17-2))))))))*((r1*(trust2-1))+(r2*(trust2-23*((r1*(trust23-1))+(r2*(trust23-17*(r2*(trust17-13*trust17-13*trustPath1-31*trustPath13-1))))+(r2*(trust2-23*((r2*(trust23-1*trust23-1*trustPath1-31*trustPath13-1))+(r2*(trust23-17*trust23-17*trustPath17-31)))))+(r2*(trust2-13*((r2*(trust13-29*trust13-29*trustPath29-31))+(r2*(trust13-7*trust13-7*trustPath7-31))+(r2*(trust13-17*trust13-17*trustPath17-31))+(r2*(trust13-4*trust13-4*trustPath4-31)))))+(r2*(trust2-1*((r1*(trust1-31*trust1-31))+(r2*(trust13-29*trust13-29*trustPath29-1))+(r2*(trust13-7*trust13-7*trustPath7-1))+(r2*(trust13-17*trust13-17*trustPath17-1))+(r2*(trust1-17*trust1-17*trustPath17-31))+(r2*(trust1-29*trust1-29*trustPath29-31))+(r2*(trust1-13*trust1-13*trustPath13-31))+(r2*(trust13-4*trust13-4*trustPath4-1))))))))+(r2*(trust2-13*((r1*(trust1-31))+(r2*(trust13-29*((r1*(trust29-1*trust29-1))+(r2*(trust29-7*trust29-7*trustPath7-1)))))+(r2*(trust13-7*((r2*(trust7-29*trust7-29*trustPath29-1))+(r2*(trust7-17*trust7-17*trustPath17-1)))))+(r2*(trust1-17*(r2*(trust17-13*trust17-13*trustPath13-31))))+(r2*(trust1-29*((r2*(trust29-13*trust29-13*trustPath13-31))+(r2*(trust29-7*trust29-7*trustPath7-31)))))+(r2*(trust13-4*((r2*(trust4-17*trust4-17*trustPath17-1)))))+(r2*(trust1-13*((r2*(trust13-29*trust13-29*trustPath29-31))+(r2*(trust13-2*trust13-2*trustPath2-31*trustPath23-1))+(r2*(trust13-7*trust13-7*trustPath7-31))+(r2*(trust13-17*trust13-17*trustPath17-31))+(r2*(trust13-4*trust13-4*trustPath4-31)))))))))))";

    map<string, double> p;
    /*
    int sa = sizeof(arr_s35)/sizeof(arr_s35[0]);
    cout<<"number of literals: "<<sa<<endl;
    for (int i = 0; i < sa; i++) {
        string name = "x";
        stringstream ss;
        ss << (i + 1);
        name.append(ss.str());
        cout<<name<<" ";
        p[name] = arr_s35[i];
        cout<<p[name]<<endl;
    }
    */
    //code to read prov from files
    ifstream pfin("/home/shaobo/Downloads/rapidnet_v1.0-master/data/prov/prov_sample_35.txt");
    stringstream buffer;
    buffer << pfin.rdbuf();
    string prov = buffer.str();
    prov.erase(0,prov.find_first_not_of(" \t\r\n"));
    prov.erase(prov.find_last_not_of(" \t\r\n") + 1);
    cout<<"prov: "<<prov<<endl;


    //code to read trust data from files
    ifstream fin("/home/shaobo/Downloads/rapidnet_v1.0-master/data/trust/sample_35.csv");
    string line;
    int i = 0;
    while (getline(fin, line))
    {
        istringstream sin(line);
        vector<string> fields;
        string field;
        while (getline(sin, field, ','))
        {
            fields.push_back(field);
        }
        if (fields[0] == "node1")
        {
            continue;
        }
        i++;
        string name;
        name.append("trust").append(fields[0]).append("-").append(fields[1]);
        double prob = stod(fields[2]);
        p[name] = prob;
        cout<<name<<" "<<p[name]<<endl;
    }
    cout<<"total number of element: "<<i<<endl;

    p["ra"] = 1.0;
    p["rb"] = 1.0;
    p["r0"] = 1.0;
    p["r1"] = 1.0;    
    p["r2"] = 1.0;
    p["r3"] = 1.0;
    p["r4"] = 1.0;
    p["r5"] = 1.0;
    p["r6"] = 1.0;

    cout<<endl;

    clock_t t1 = clock();
    DNF dnf (prov, p);
    t1 = clock()-t1;
    cout<<"DNF running time: "<<((float)t1)/CLOCKS_PER_SEC<<" seconds"<<endl;
    dnf.ShowStructure();
    //cout<<dnf.ToString()<<endl;

    Suff suff;    
    //cout<<"Original formula: "<<endl;
    //suff.printProv(dnf.getLambda());
    double pLambda = suff.probMC(dnf.getLambda());
    cout<<"pLambda = "<<pLambda<<endl;


    clock_t tsuff = clock();
    double epsilon = 1*0.01*pLambda; // approximation error
    suff.setSuffProv(dnf.getLambda(), epsilon);
    tsuff = clock() - tsuff;
    cout<<"Suff lineage time: "<<((float) tsuff)/CLOCKS_PER_SEC<<" seconds"<<endl;
    cout<<"Sufficient lineage: "<<endl;
    suff.printProv(suff.getSuffProv());


    cout<<"Influence:" <<endl;
    clock_t t2 = clock();
    //suff.setInfluence(dnf.getLambda());
    suff.setInfluence(suff.getSuffProv());
    t2 = clock() - t2;
    cout<<"Influence running time: "<<((float)t2)/CLOCKS_PER_SEC<<" seconds"<<endl;
    Literal x = suff.maxInfluence();
    cout<<"maxInfluence Literal: "<<x.getName()<<" "<<x.getProb()<<endl;
/*
    clock_t t3 = clock();
    vector<Literal> vcl = suff.changedLiterals(dnf.getLambda(), 0.7);
    //vector<Literal> vcl = suff.changedLiterals(suff.getSuffProv(), 0.7);
    t3 = clock() - t3;
    cout<<"Changed literals running time: "<<((float)t3)/CLOCKS_PER_SEC<<" seconds"<<endl;
    cout<<"Changed Literals: "<<endl;
    suff.print(vcl);
*/
    return 0;
}

